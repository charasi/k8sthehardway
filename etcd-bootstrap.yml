---
- name: Bootstrapping an etcd Cluster Member
  hosts: k8controllers
  remote_user: wisccourant
  become: true

  tasks:
    - name: Provision CA and generate TLS Certificates
      block:
        - name: Download the official etcd release binaries from the coreos/etcd GitHub project
          ansible.builtin.get_url:
            url: "https://github.com/etcd-io/etcd/releases/download/v3.5.17/etcd-v3.5.17-linux-amd64.tar.gz"
            dest: /home/wisccourant/
            mode: "0600"
          register: etcd_output

        - name: Print etcd download information from the previous task
          ansible.builtin.debug:
            var: etcd_output
            verbosity: 0

        - name: Extract etcd server and the etcdctl command line utility
          ansible.builtin.unarchive:
            src: /home/wisccourant/etcd-v3.5.17-linux-amd64.tar.gz
            dest: /home/wisccourant/
            remote_src: true

        - name: Install the etcd server and the etcdctl command line utility
          ansible.builtin.shell: |
            sudo mv etcd-v3.5.17-linux-amd64/etcd* /usr/local/bin/
          args:
            chdir: /home/wisccourant/
          register: status
          changed_when: false

        - name: Verify cmd process sucessfully
          ansible.builtin.debug:
            var: status
            verbosity: 0

        - name: Download the Kubernetes Controller Binaries
          ansible.builtin.get_url:
            url: "https://storage.googleapis.com/kubernetes-release/release/v1.31.0/bin/linux/amd64/kubectl"
            dest: /home/wisccourant/
            mode: '0755'
          register: output

        - name: Print cfssl information from the previous task
          ansible.builtin.debug:
            var: output
            verbosity: 0

        - name: Make binaries executable
          ansible.builtin.command:
            cmd: chmod +x kubectl
            chdir: /home/wisccourant/
          changed_when: false

        - name: Move binaries to bin directory
          ansible.builtin.command:
            cmd: sudo mv kubectl /usr/local/bin/
            chdir: /home/wisccourant/
          changed_when: false

        - name: Get the main IP address
          ansible.builtin.command:
            cmd: hostname -I
          register: ip_address
          changed_when: false

        - name: Retrieve the internal IP address for the current compute instance
          ansible.builtin.command:
            cmd: hostname
          register: host_name
          changed_when: false

        - name: Created directories
          ansible.builtin.shell: |
            sudo mkdir -p /etc/etcd /var/lib/etcd
          args:
            chdir: /home/wisccourant/
          register: status
          changed_when: false

        - name: Verify cmd process sucessfully
          ansible.builtin.debug:
            var: status
            verbosity: 0

        - name: Download certificates from gcp
          ansible.builtin.shell: |
            sudo gsutil cp {{ item.source }} {{ item.dest }}
          loop:
            - { source: "gs://kthw-misc/etcd.pem", dest: "/etc/etcd/" }
            - { source: "gs://kthw-misc/etcd-key.pem", dest: "/etc/etcd/" }
            - { source: "gs://kthw-misc/ca.pem", dest: "/etc/etcd/" }
            - { source: "gs://kthw-misc/etcd-client.pem", dest: "/etc/etcd/" }
            - { source: "gs://kthw-misc/etcd-client-key.pem", dest: "/etc/etcd/" }
            - { source: "gs://kthw-misc/static_ip.txt", dest: "/etc/etcd/" }
          changed_when: false
          register: status

        - name: Verify cmd process sucessfully
          ansible.builtin.debug:
            var: status
            verbosity: 0

        - name: Read the IP address from the text file
          ansible.builtin.command:
            cmd: cat /etc/etcd/static_ip.txt
            chdir: /etc/etcd/
          register: kubernetes_public_address
          changed_when: false

        - name: Verify that the IP address was retrieved
          ansible.builtin.assert:
            that:
              - kubernetes_public_address.stdout | length > 0  # Ensures the content is not empty
            msg: "No IP address was retrieved from the file."

        - name: Use the IP address
          ansible.builtin.debug:
            msg: "The extracted IP address is: {{ kubernetes_public_address.stdout }}"

        - name: Generate kubeconfig file for etcd
          ansible.builtin.shell: |
            kubectl config set-cluster kubernetes-the-hard-way \
              --certificate-authority=/etc/etcd/ca.pem \
              --embed-certs=true \
              --server=https://{{ kubernetes_public_address.stdout | trim }}:6443 \
              --kubeconfig=/etc/etcd/etcd.kubeconfig
          args:
            chdir: /etc/etcd/
          register: status
          changed_when: false

        - name: Set credentials for etcd client in kubeconfig
          ansible.builtin.shell: |
            kubectl config set-credentials etcd-client \
              --client-certificate=/etc/etcd/etcd-client.pem \
              --client-key=/etc/etcd/etcd-client-key.pem \
              --embed-certs=true \
              --kubeconfig=/etc/etcd/etcd.kubeconfig
          args:
            chdir: /etc/etcd/
          register: status
          changed_when: false

        - name: Set context for etcd in kubeconfig
          ansible.builtin.shell: |
            kubectl config set-context default \
              --cluster=kubernetes-the-hard-way \
              --user=etcd \
              --kubeconfig=/etc/etcd/etcd.kubeconfig
          args:
            chdir: /etc/etcd/
          register: status
          changed_when: false

        - name: Use context for etcd kubeconfig
          ansible.builtin.shell: |
            kubectl config use-context default --kubeconfig=etcd.kubeconfig
          args:
            chdir: /etc/etcd/
          register: status
          changed_when: false

        - name: Create the etcd.service systemd unit file in the current directory
          ansible.builtin.shell: |
            cat > /home/wisccourant/etcd.service <<EOF
            [Unit]
            Description=etcd
            Documentation=https://github.com/coreos

            [Service]
            ExecStart=/usr/local/bin/etcd \\
              --name {{ host_name.stdout }} \\
              --cert-file=/etc/etcd/etcd-client.pem \\
              --key-file=/etc/etcd/etcd-client-key.pem \\
              --trusted-ca-file=/etc/etcd/ca.pem \\
              --peer-trusted-ca-file=/etc/etcd/ca.pem \\
              --peer-client-cert-auth \\
              --client-cert-auth \\
              --initial-advertise-peer-urls https://{{ ip_address.stdout | trim }}:2380 \\
              --listen-peer-urls https://{{ ip_address.stdout | trim }}:2380 \\
              --listen-client-urls https://{{ ip_address.stdout | trim }}:2379,https://127.0.0.1:2379 \\
              --advertise-client-urls https://{{ ip_address.stdout | trim }}:2379 \\
              --initial-cluster-token etcd-cluster-0 \\
              --initial-cluster controller-0=https://10.240.0.10:2380,controller-1=https://10.240.0.11:2380,controller-2=https://10.240.0.12:2380 \\
              --initial-cluster-state new \\
              --data-dir=/var/lib/etcd
            Restart=on-failure
            RestartSec=5

            [Install]
            WantedBy=multi-user.target
            EOF
          args:
            chdir: /home/wisccourant/
          register: status
          changed_when: true


        - name: Verify cmd process sucessfully
          ansible.builtin.debug:
            var: status
            verbosity: 0

        - name: Move the etcd.service file you created into the /etc/systemd/system/ directory
          ansible.builtin.shell: |
            sudo mv etcd.service /etc/systemd/system/
          args:
            chdir: /home/wisccourant/
          register: status
          changed_when: false

        - name: Verify cmd process sucessfully
          ansible.builtin.debug:
            var: status
            verbosity: 0

        - name: Reload systemd's configuration
          ansible.builtin.shell: |
            sudo systemctl daemon-reload
          args:
            chdir: /home/wisccourant/
          register: status
          changed_when: false

        - name: Verify cmd process sucessfully
          ansible.builtin.debug:
            var: status
            verbosity: 0

        - name: Enable the etcd service
          ansible.builtin.shell: |
            sudo systemctl enable etcd
          args:
            chdir: /home/wisccourant/
          register: status
          changed_when: false

        - name: Verify cmd process sucessfully
          ansible.builtin.debug:
            var: status
            verbosity: 0

        - name: Start the etcd Server
          ansible.builtin.shell: |
            sudo systemctl start etcd
          args:
            chdir: /home/wisccourant/
          register: status
          changed_when: false

        - name: Verify cmd process sucessfully
          ansible.builtin.debug:
            var: status
            verbosity: 0

        - name: List the etcd cluster members
          ansible.builtin.shell: |
            ETCDCTL_API=3 etcdctl member list
          args:
            chdir: /home/wisccourant/
          register: status
          changed_when: false

        - name: Verify cmd process sucessfully
          ansible.builtin.debug:
            var: status
            verbosity: 0
