---
- name: Add RBAC for scheduler, controller-manager, and reverse
  hosts: k8controller1
  remote_user: wisccourant
  become: true

  tasks:
    - name: Provision the Kubernetes Control Plane
      block:
        - name: Set correct permissions for kubeconfig admin
          ansible.builtin.command:
            cmd: sudo chmod 644 /var/lib/kubernetes/admin.kubeconfig
          register: chmod_status
          changed_when: true

        - name: Create custom ClusterRole for admin
          ansible.builtin.shell: |
            set -o pipefail
            export KUBECONFIG=/var/lib/kubernetes/admin.kubeconfig
            cat <<EOF | kubectl apply -f -
            apiVersion: rbac.authorization.k8s.io/v1
            kind: ClusterRole
            metadata:
              annotations:
                rbac.authorization.kubernetes.io/autoupdate: "true"
              labels:
                kubernetes.io/bootstrapping: rbac-defaults
              name: system:kube-apiserver-to-kubelet
            rules:
              - apiGroups:
                  - ""
                resources:
                  - nodes/proxy
                  - nodes/stats
                  - nodes/log
                  - nodes/spec
                  - nodes/metrics
                verbs:
                  - "*"
            EOF
          register: rbac_status
          changed_when: false
          args:
            executable: /bin/bash

        - name: Bind custom ClusterRole to admin
          ansible.builtin.shell: |
            set -o pipefail
            export KUBECONFIG=/var/lib/kubernetes/admin.kubeconfig
            cat <<EOF | kubectl apply -f -
            apiVersion: rbac.authorization.k8s.io/v1
            kind: ClusterRoleBinding
            metadata:
              name: system:kube-apiserver
            roleRef:
              apiGroup: rbac.authorization.k8s.io
              kind: ClusterRole
              name: system:kube-apiserver-to-kubelet
            subjects:
              - kind: User
                name: kubernetes
                apiGroup: rbac.authorization.k8s.io
            EOF
          register: rbac_binding_status
          changed_when: false
          args:
            executable: /bin/bash

        - name: Create custom ClusterRole for controller-manager
          ansible.builtin.shell: |
            set -o pipefail
            export KUBECONFIG=/var/lib/kubernetes/admin.kubeconfig
            cat <<EOF | kubectl apply -f -
            apiVersion: rbac.authorization.k8s.io/v1
            kind: ClusterRole
            metadata:
              name: system:kube-controller-manager
            rules:
              # Existing rules for other resources
              - apiGroups: ["storage.k8s.io"]
                resources: ["volumeattachments"]
                verbs: ["get", "list", "watch"]
            
              - apiGroups: ["apps"]
                resources: ["deployments", "statefulsets", "replicasets", "controllerrevisions"]
                verbs: ["get", "list", "watch"]
            
              - apiGroups: ["networking.k8s.io"]
                resources: ["networkpolicies", "servicecidrs"]
                verbs: ["get", "list", "watch"]
            
              - apiGroups: ["coordination.k8s.io"]
                resources: ["leases", "leasecandidates"]
                verbs: ["get", "list", "watch", "update"]
            
              - apiGroups: ["discovery.k8s.io"]
                resources: ["endpointslices"]
                verbs: ["get", "list", "watch"]
            
              - apiGroups: [""]
                resources: ["serviceaccounts"]
                verbs: ["get", "list", "watch"]
                        
              - apiGroups: ["v1"]
                resources: ["configmaps", "cronjobs", "services", "nodes", "serviceaccounts"]
                verbs: ["get", "list", "watch"]
            
              - apiGroups: ["autoscaling"]
                resources: ["horizontalpodautoscalers"]
                verbs: ["get", "list", "watch"]
            
              - apiGroups: ["scheduling.k8s.io"]
                resources: ["priorityclasses"]
                verbs: ["get", "list", "watch"]
            
              - apiGroups: ["resource.k8s.io"]
                resources: ["resourceclaims"]
                verbs: ["get", "list", "watch"]
            
              - apiGroups: ["batch"]
                resources: ["jobs"]
                verbs: ["get", "list", "watch"]
            
              - apiGroups: ["internal.apiserver.k8s.io"]
                resources: ["storageversions"]
                verbs: ["get", "list", "watch"]         
                  # Continue adding any other required resources             
             EOF
          register: rbac_status
          changed_when: false
          args:
            executable: /bin/bash

        - name: Bind custom ClusterRole to controller-manager
          ansible.builtin.shell: |
            set -o pipefail
            export KUBECONFIG=/var/lib/kubernetes/admin.kubeconfig
            cat <<EOF | kubectl apply -f -
            apiVersion: rbac.authorization.k8s.io/v1
            kind: ClusterRoleBinding
            metadata:
              name: system:controller-manager-leases
            subjects:
              - kind: User
                name: system:controller-manager
                apiGroup: rbac.authorization.k8s.io
            roleRef:
              kind: ClusterRole
              name: system:kube-controller-manager
              apiGroup: rbac.authorization.k8s.io
            EOF
          register: rbac_binding_status
          changed_when: false
          args:
            executable: /bin/bash
