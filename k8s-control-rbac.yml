---
- name: Add RBAC for scheduler, controller-manager, and reverse
  hosts: k8controller1
  remote_user: wisccourant
  become: true

  tasks:
    - name: Provision the Kubernetes Control Plane
      block:
        - name: Set correct permissions for kubeconfig admin
          ansible.builtin.command:
            cmd: sudo chmod 644 /var/lib/kubernetes/admin.kubeconfig
          register: chmod_status
          changed_when: true

        - name: Create custom ClusterRole for admin
          ansible.builtin.shell: |
            set -o pipefail
            export KUBECONFIG=/var/lib/kubernetes/admin.kubeconfig
            cat <<EOF | kubectl apply -f -
            apiVersion: rbac.authorization.k8s.io/v1
            kind: ClusterRole
            metadata:
              annotations:
                rbac.authorization.kubernetes.io/autoupdate: "true"
              labels:
                kubernetes.io/bootstrapping: rbac-defaults
              name: system:kube-apiserver-to-kubelet
            rules:
              - apiGroups:
                  - ""
                resources:
                  - nodes/proxy
                  - nodes/stats
                  - nodes/log
                  - nodes/spec
                  - nodes/metrics
                verbs:
                  - "*"
            EOF
          register: rbac_status
          changed_when: false
          args:
            executable: /bin/bash

        - name: Bind custom ClusterRole to admin
          ansible.builtin.shell: |
            set -o pipefail
            export KUBECONFIG=/var/lib/kubernetes/admin.kubeconfig
            cat <<EOF | kubectl apply -f -
            apiVersion: rbac.authorization.k8s.io/v1
            kind: ClusterRoleBinding
            metadata:
              name: system:kube-apiserver
            roleRef:
              apiGroup: rbac.authorization.k8s.io
              kind: ClusterRole
              name: system:kube-apiserver-to-kubelet
            subjects:
              - kind: User
                name: kubernetes
                apiGroup: rbac.authorization.k8s.io
            EOF
          register: rbac_binding_status
          changed_when: false
          args:
            executable: /bin/bash

        - name: Create custom ClusterRole for controller-manager
          ansible.builtin.shell: |
            set -o pipefail
            export KUBECONFIG=/var/lib/kubernetes/admin.kubeconfig
            cat <<EOF | kubectl apply -f -
            apiVersion: rbac.authorization.k8s.io/v1
            kind: ClusterRole
            metadata:
              name: system:kube-controller-manager
            rules:
              # Access to core resources
              - apiGroups: [""]
                resources: ["pods", "services", "endpoints", "namespaces", "replicationcontrollers", "nodes", "persistentvolumes", "persistentvolumeclaims", "configmaps", "secrets", "serviceaccounts", "events", "limitranges", "resourcequotas"]
                verbs: ["get", "list", "create", "update", "patch", "delete"]

              # Access to coordination.k8s.io for leader election
              - apiGroups: ["coordination.k8s.io"]
                resources: ["leases"]
                verbs: ["get", "create", "update", "delete"]

              # Access to extensions/v1beta1 for deployments, replicasets, etc.
              - apiGroups: ["extensions"]
                resources: ["deployments", "replicasets", "daemonsets", "statefulsets"]
                verbs: ["get", "list", "create", "update", "delete"]

              # Access to apps/v1 for deployments, replicasets, etc.
              - apiGroups: ["apps"]
                resources: ["deployments", "replicasets", "statefulsets", "daemonsets"]
                verbs: ["get", "list", "create", "update", "delete"]

              # Access to batch for jobs, cronjobs
              - apiGroups: ["batch"]
                resources: ["jobs", "cronjobs"]
                verbs: ["get", "list", "create", "update", "delete"]

              # Access to autoscaling for horizontalpodautoscalers
              - apiGroups: ["autoscaling"]
                resources: ["horizontalpodautoscalers"]
                verbs: ["get", "list", "create", "update", "delete"]

              # Access to networking.k8s.io for network policies
              - apiGroups: ["networking.k8s.io"]
                resources: ["networkpolicies"]
                verbs: ["get", "list", "create", "update", "delete"]

              # Access to admissionregistration.k8s.io for mutating webhooks
              - apiGroups: ["admissionregistration.k8s.io"]
                resources: ["mutatingwebhookconfigurations", "validatingwebhookconfigurations"]
                verbs: ["get", "list", "create", "update", "delete"]

              # Access to policy for podsecuritypolicies
              - apiGroups: ["policy"]
                resources: ["podsecuritypolicies"]
                verbs: ["get", "list", "create", "update", "delete"]

              # Access to rbac.authorization.k8s.io for role-based access control
              - apiGroups: ["rbac.authorization.k8s.io"]
                resources: ["roles", "rolebindings", "clusterroles", "clusterrolebindings"]
                verbs: ["get", "list", "create", "update", "delete"]

              # Access to serviceaccounts for token creation
              - apiGroups: [""]
                resources: ["serviceaccounts", "serviceaccounts/token"]
                verbs: ["get", "list", "create", "update", "delete"]
            EOF
          register: rbac_status
          changed_when: false
          args:
            executable: /bin/bash

        - name: Bind custom ClusterRole to controller-manager
          ansible.builtin.shell: |
            set -o pipefail
            export KUBECONFIG=/var/lib/kubernetes/admin.kubeconfig
            cat <<EOF | kubectl apply -f -
            apiVersion: rbac.authorization.k8s.io/v1
            kind: ClusterRoleBinding
            metadata:
              name: system:controller-manager-leases
            subjects:
              - kind: User
                name: system:controller-manager
                apiGroup: rbac.authorization.k8s.io
            roleRef:
              kind: ClusterRole
              name: system:kube-controller-manager
              apiGroup: rbac.authorization.k8s.io
            EOF
          register: rbac_binding_status
          changed_when: false
          args:
            executable: /bin/bash